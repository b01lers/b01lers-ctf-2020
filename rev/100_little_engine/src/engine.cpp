#include <iomanip>
#include <iostream>
#include <fstream>
#include <limits>
#include <vector>
#include <exception>

void scram(std::vector<uint8_t> & s) {
	uint8_t start = 0x91;
	for (size_t i = 0; i < s.size(); i++) {
		if (s.at(i) != '\n') {
			s.at(i) ^= start;
			start = (start + i) % std::numeric_limits<uint8_t>::max();
		} else {
			throw std::exception();
		}
	}
}

bool valid(std::vector<uint8_t> & s) {
	//const std::vector<uint8_t> cmp = {0xe1, 0xf2, 0xe6, 0xf2, 0xec, 0xef, 0xc8, 0x95, 0xf2, 0xd8, 0x8e, 0xac, 0xe0, 0xad, 0x82, 0xa5, 0x79, 0x6e, 0x18, 0x9, 0x3d, 0x3b, 0x4a, 0xe1, 0xc1, 0x8f, 0xb9, 0xc2, 0x52, 0x5e, 0x72, 0x51, 0xdc, 0x92, 0xaa, 0x90, 0x39, 0x40, 0x27, 0x4a, 0xc4, 0x97, 0xc0, 0x72, 0x18, 0x42, 0x96, 0xf7, 0xc5, 0x71, 0x3d, 0xe4, 0x90, 0xa7, 0x5a, 0xc, 0xa8, 0x8c, 0x6f, 0x74, 0xf1, 0xca, 0xa4, 0xa, 0x17, 0x8a, 0xa5, 0x54, 0xee, 0x9b, 0x3b, 0x69, 0xa3, 0xef, 0x54};
	/* Threw 3 random bytes after each one to misdirect a little bit so they don't just grab the array and menip it straightaway */
	const std::vector<uint8_t> cmp = {0xe1, 0xe6, 0xd0, 0x4a, 0xf2, 0xc3, 0x7e, 0xaa, 0xe6, 0xfc, 0x42, 0xb2, 0xf2, 0xb5, 0x1, 0xb4, 0xec, 0x7d, 0x39, 0x20, 0xef, 0xc0, 0x4e, 0x13, 0xc8, 0x2f, 0x67, 0xaa, 0x95, 0x79, 0x6b, 0xf5, 0xf2, 0x6, 0x41, 0x79, 0xd8, 0x35, 0xf9, 0xc8, 0x8e, 0xde, 0x88, 0x51, 0xac, 0x4c, 0xf0, 0x81, 0xe0, 0xf4, 0xee, 0x14, 0xad, 0xf1, 0x25, 0xbd, 0x82, 0x7c, 0x62, 0x30, 0xa5, 0xf8, 0x80, 0x2b, 0x79, 0x85, 0x2a, 0xf8, 0x6e, 0x5a, 0xae, 0xcb, 0x18, 0x3a, 0xa2, 0xd0, 0x9, 0xc5, 0x8c, 0x5d, 0x3d, 0x34, 0x6b, 0xf9, 0x3b, 0x72, 0x4b, 0xe, 0x4a, 0xc3, 0x71, 0x53, 0xe1, 0xe9, 0x7, 0xbb, 0xc1, 0x1a, 0xe7, 0x7, 0x8f, 0x1b, 0x75, 0x74, 0xb9, 0x8e, 0x5d, 0x2e, 0xc2, 0xf6, 0x17, 0x3b, 0x52, 0xed, 0xd7, 0xbd, 0x5e, 0xe9, 0x76, 0x63, 0x72, 0xe2, 0xea, 0x89, 0x51, 0xd7, 0x4f, 0x34, 0xdc, 0x39, 0xd5, 0x58, 0x92, 0xd9, 0xd2, 0xd2, 0xaa, 0x69, 0xf1, 0xbf, 0x90, 0x76, 0xe1, 0x9c, 0x39, 0xd, 0xc, 0xb3, 0x40, 0x6, 0x48, 0xda, 0x27, 0xd5, 0x1e, 0xb8, 0x4a, 0x94, 0x4c, 0x98, 0xc4, 0x8a, 0x68, 0xa8, 0x97, 0x5e, 0x64, 0xf9, 0xc0, 0x58, 0xf7, 0x2, 0x72, 0x8d, 0x3b, 0x88, 0x18, 0x14, 0xec, 0x8f, 0x42, 0x70, 0xc, 0xb, 0x96, 0x66, 0x22, 0x8e, 0xf7, 0x58, 0x1, 0x2e, 0xc5, 0xdc, 0x4b, 0xc0, 0x71, 0xf4, 0xda, 0xe6, 0x3d, 0x73, 0x88, 0x7d, 0xe4, 0x91, 0x1f, 0x75, 0x90, 0x70, 0xd6, 0xc, 0xa7, 0x9, 0x7c, 0xf2, 0x5a, 0x4e, 0xa1, 0x9, 0xc, 0x51, 0x3c, 0xba, 0xa8, 0x64, 0x38, 0x2d, 0x8c, 0x0, 0x88, 0xe3, 0x6f, 0xea, 0x77, 0x90, 0x74, 0x39, 0xaa, 0x56, 0xf1, 0xa8, 0x6e, 0x80, 0xca, 0x3d, 0x9e, 0x69, 0xa4, 0x69, 0x48, 0xf2, 0xa, 0x2c, 0xf7, 0x33, 0x17, 0xf, 0x5c, 0xf2, 0x8a, 0xe5, 0x2f, 0x55, 0xa5, 0x9f, 0x8b, 0x65, 0x54, 0x76, 0xe0, 0x64, 0xee, 0x9d, 0x9b, 0x2d, 0x9b, 0x5f, 0x72, 0x7f, 0x3b, 0xd9, 0xdf, 0x5, 0x69, 0xf0, 0x9f, 0xf0, 0xa3, 0x8c, 0xe6, 0xcd, 0xef, 0xb4, 0xbc, 0x44, 0x54, 0x3e, 0xe3, 0x44};
	for (size_t i = 0, j = 0; j < cmp.size(); i++, j += 4) {
		if (cmp.at(j) != s.at(i)) return false;
	}
	/*
	for (size_t i = 0; i < cmp.size(); i++) {
		if (cmp.at(i) != s.at(i)) return false;
	}
	*/
	return true;
}

void intro(void) {
	std::cout << "Welcome! We're doing things a little differently here, you're going to tell me a tidbit about trains. Are you ready?" << std::endl;
	int c = ::getchar();
	if (!(c > 0x20 && c < 0x7f)) {
		std::cout << "Hey now, what're you trying to pull over on me, conductor?" << std::endl;
	}
}

std::vector<uint8_t> get_input(void) {
	std::cout << "Now, I hope you're a total trainiac. Give me your best tidbit: ";
	std::string inp;
	std::cin >> inp;
	return std::vector<uint8_t>(inp.begin(), inp.end());
}


int main() {
	intro();
	std::vector<uint8_t> uinput = get_input();
	scram(uinput);
	if (valid(uinput)) {
		std::cout << "Chugga chugga choo choo you're the little engine that CAN!" << std::endl;
	} else {
		std::cout << "I guess you don't know anything about trains...go do some TRAINing you non-conductor :(" << std::endl;
	}
}